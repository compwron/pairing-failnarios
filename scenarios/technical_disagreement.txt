Context: The challenging pair is very sure that their answer is correct, but it is not.

1
You:	I think we should raise an exception here.
Other:	That's dumb. We should just return null. Let someone else deal with it.
You:	I'm usually in favor of giving information as early and as specific as possible.
Other:	Seems like a waste of time to me, just more code to write.
You:	But how many times have you complained about not getting enough information with an error?
Other:	Well, yeah, from ruby itself, but we aren't writing a language, just a business app.
You:	I don't think that matters, if we can make it easier for someone later we should.
Other:	If you insist, but I still think it's a waste of time.

2
You:	Let's try using Foo to solve this.
Other:	Hmmm, I don't think that works in ruby.
You:	I think I've seen it used before.
Other:	I doubt it, I know I've googled it, and it's just not supported.
You:	You must be thinking of Bar. Let's just try Foo and see what happens.
Other:	Sigh.  Well, if you really must try, but I know it's a waste of time.

3
You: Here, let me write a test- I think there's an edge case left
Other: No, the code works fine. Let's move on.
You: I think that when they're both zero, the function will return the wrong value.
Other: No, it works fine.
You: Here, let me write it
Other: Fine, but it'll be green.

4
You:	This method is doing two things; let's split it out into two methods before we extend this functionality.
Other: No, all this functionality belongs together, we need to break it out into an object.
You: We could do that... I think that making it into methods would be cleaner here, though.
Other:	No, it really needs to be an object
