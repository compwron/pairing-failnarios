Things the pair-aware pair might say:

"How do we test this?" This phrase brings up the awareness that functionality should be tested and brings the pair's mind to onder how to test this. This is a good phrase to use when you are not sure what is going on, but know that code behavior is being introduced or changed. If the response to this is "We don't have to" or "Not right now", etc, you might want to say "why not?" in a nonthreatening way, possibly followed by "I'm confused, just keep going"

"I'm confused, just keep going" is not ideal to say; this is best used in a situation when velocity is more important than knowledge sharing. After saying this, pay very close attention to what your pair does. Take hand-written notes if possible. 

"So, is this a commit point?" This is a gentle way to gather more information about whether your pair thinks that all the tests are in a passing state, while also remining them that it is appropriate to commit as often as possible when the tests are green.



Phrases to respond to:
"You're talking too much; be quiet, I need to think." Definitely talk less. Perhaps say something akin to "I'm sorry, I'll be quieter. I'm trying to understand. Can I ask you more questions when this piece is done?" Often during pairing adjustment, one pair has trouble thinking while narrating or being narrated to. Silence is important. Give your pair some verbal space when they need it. They will probably stare into the air and frown for a while, then begin typing or talking again. 
Alternately, your pair may be being a jerk. As soon as possible, ask someone nearby who you are cool with to listen in and give you some advice on what to do in this particular situation. 

"Don't touch anything!" Although this may be said in jest or not. Consider responding with "I think better when I can navigate through the code" or "I'm not sure what I'm looking at, could I click around a little?" In a more joking vein, consider saying "it's okay, we have version control; anything I break, you can just revert." (This last is less appropriate when you have many uncommitted changes.)